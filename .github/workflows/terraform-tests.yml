name: Terraform Tests

on:
  push:
    branches: [ main ]
    paths:
      - '**.tf'
      - '**.tftest.hcl'
      - '.github/workflows/terraform-tests.yml'
  pull_request:
    branches: [ main ]
    paths:
      - '**.tf'
      - '**.tftest.hcl'
      - '.github/workflows/terraform-tests.yml'
  workflow_dispatch:
    # Allows manual triggering of the workflow

# Permissions needed for the workflow
permissions:
  contents: read
  pull-requests: write

env:
  TF_LOG: INFO
  # Skip Azure CLI installation prompts and use a particular version
  AZURE_CLI_VERSION: 2.53.0
  # Skip interactive Terraform prompts
  TF_IN_AUTOMATION: true
  # Skip Azure CLI prompts and warnings
  AZURE_CORE_OUTPUT: none
  ARM_SKIP_PROVIDER_REGISTRATION: true
  # Use system-assigned managed identity for authentication if available
  ARM_USE_MSI: true

jobs:
  terraform-test:
    name: Terraform Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5
          terraform_wrapper: false

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init -backend=false
      
      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Run Terraform Tests
        id: test
        run: |
          # First run with minimal output to avoid cluttering logs
          terraform test -junit-xml=test-results.xml || TEST_EXIT_CODE=$?
          
          # If tests failed, run again with verbose output for debugging
          if [ -n "$TEST_EXIT_CODE" ]; then
            echo "::group::Verbose Test Output for Debugging"
            terraform test -verbose
            echo "::endgroup::"
            exit $TEST_EXIT_CODE
          fi

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: test-results.xml
          comment_mode: always

      - name: Comment PR with Test Results
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request' && (success() || failure())
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const formatStatus = (failed) => failed ? '❌ Failed' : '✅ Passed';
            
            const formatResults = () => {
              const formatStepOutput = (passed, name) =>
                `${passed ? '✅' : '❌'} **${name}:** ${passed ? 'Passed' : 'Failed'}`;
              
              return [
                formatStepOutput(${{ steps.fmt.outcome == 'success' }}, 'Terraform Format'),
                formatStepOutput(${{ steps.validate.outcome == 'success' }}, 'Terraform Validate'),
                formatStepOutput(${{ steps.test.outcome == 'success' }}, 'Terraform Tests')
              ].join('\n');
            };
            
            const testStatus = ${{ steps.test.outcome == 'success' }};
            const formattedResults = formatResults();
            
            const body = `## Terraform Test Results: ${formatStatus(!testStatus)}
            
            ${formattedResults}
            
            ${testStatus 
              ? '✨ All tests passed! Your infrastructure code is looking good.'
              : '⚠️ Some tests failed. Please check the workflow logs for details.'}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });
